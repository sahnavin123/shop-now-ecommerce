import Head from "next/head";
import mongoose from "mongoose";
import Product from "@/models/Products";
import Link from "next/link";

import styles from "@/styles/Home.module.css";

export default function Home({ products }) {
  let trending = 4;
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="relative">
        <img src="/bg.jpg" className="w-full h-screen object-cover" alt="" />\
        <div className=" mx-2 absolute top-1/4 left-1/3 lg:top-1/4 transform -translate-x-1/2 -translate-y-1/2 text-white text-center">
          <h1 className=" text-3xl md:text-5xl font-bold text-yellow-400 mb-4">
            Welcome to <span className="text-indigo-500">ShopNow.com</span>
          </h1>
          <p className=" text-sm lg:text-lg text-gray-800 mb-2">
            Discover a world of amazing products at your fingertips.
          </p>
          <p className="text-sm lg:text-lg text-gray-800 mb-2">
            Quality, Style, and Convenience—all in one place.
          </p>
          <p className="text-sm lg:text-lg text-gray-800 mb-2">
            Explore our categories and find the perfect items for you.
          </p>
          <p className="text-sm lg:text-lg text-gray-800 mt-6">
            Scroll down to check out our{" "}
            <span className="text-indigo-500 border-l-0 text-xl">latest products</span>
            !!!
          </p>
        </div>
      </div>
      <section className="text-gray-600 body-font">
        <div className="container px-5 pt-8 mx-auto">
          <div className="flex flex-wrap w-full mb-20 flex-col items-center text-center">
            <h1 className="sm:text-3xl text-2xl font-medium title-font mb-2 text-gray-900">
              Shop now
            </h1>
            <p className="lg:w-1/2 w-full leading-relaxed text-gray-500">
              Trending Tshirts
            </p>
          </div>
          <section className="text-gray-600 body-font mt-0">
            <div className="container px-5 mx-auto">
              <div className="flex flex-wrap justify-center">
                {Object.keys(products).length === 0 && (
                  <p>Sorry all the Tshirts are currently out of stock.</p>
                )}
                {Object.keys(products).map((item) => (
                  <Link
                    key={products[item]._id}
                    href={`/product/${products[item].slug}`}
                    passHref
                    legacyBehavior
                  >
                    <div
                      className="lg:w-1/5 md:w-1/2 p-4 w-full 
           shadow-lg cursor-pointer m-5"
                    >
                      <a className="block relative  rounded overflow-hidden">
                        <img
                          alt="ecommerce"
                          className=" h-[30vh] md:h-[36vh] m-auto "
                          src={products[item].img}
                        />
                      </a>
                      <div className=" text-center mt-4">
                        <h3 className="text-gray-500 text-xs tracking-widest title-font mb-1">
                          Tshirts
                        </h3>
                        <h2 className="text-gray-900 title-font text-lg font-medium">
                          {products[item].title}
                        </h2>
                        <p className="mt-1">₹{products[item].price}</p>
                        <div className=" mt-1">
                          {products[item].size.includes("S") && (
                            <span className=" border px-1 mx-1 border-gray-500">
                              S
                            </span>
                          )}
                          {products[item].size.includes("M") && (
                            <span className=" border px-1 mx-1 border-gray-500">
                              M
                            </span>
                          )}
                          {products[item].size.includes("L") && (
                            <span className=" border px-1 mx-1 border-gray-500">
                              L
                            </span>
                          )}
                          {products[item].size.includes("XL") && (
                            <span className=" border px-1 mx-1 border-gray-500">
                              XL
                            </span>
                          )}
                          {products[item].size.includes("XXL") && (
                            <span className=" border px-1 mx-1 border-gray-500">
                              XXL
                            </span>
                          )}
                        </div>
                        <div className=" mt-1">
                          {products[item].color.includes("red") && (
                            <button className=" border-2 border-gray-300 ml-1 bg-red-700 rounded-full w-6 h-6  focus:outline-none"></button>
                          )}
                          {products[item].color.includes("white") && (
                            <button className=" border-2 border-gray-300 ml-1 bg-white rounded-full w-6 h-6  focus:outline-none"></button>
                          )}
                          {products[item].color.includes("blue") && (
                            <button className=" border-2 border-gray-300 ml-1 bg-blue-700 rounded-full w-6 h-6  focus:outline-none"></button>
                          )}
                          {products[item].color.includes("gray") && (
                            <button className=" border-2 border-gray-300 ml-1 bg-gray-700 rounded-full w-6 h-6  focus:outline-none"></button>
                          )}
                          {products[item].color.includes("black") && (
                            <button className=" border-2 border-gray-300 ml-1 bg-black rounded-full w-6 h-6  focus:outline-none"></button>
                          )}
                        </div>
                      </div>
                    </div>
                  </Link>
                ))}
              </div>
            </div>
          </section>
        </div>
      </section>
    </>
  );
}

export async function getServerSideProps(context) {
  mongoose.set("strictQuery", true);
  if (!mongoose.connections[0].readyState) {
    await mongoose.connect(process.env.MONGO_URL);
  }
  let products = await Product.find({ category: "tshirt" });
  let tshirts = {};
  for (let item of products) {
    if (item.title in tshirts) {
      if (
        !tshirts[item.title].color.includes(item.color) &&
        item.availableQty > 0
      ) {
        tshirts[item.title].color.push(item.color);
      }
      if (
        !tshirts[item.title].size.includes(item.size) &&
        item.availableQty > 0
      ) {
        tshirts[item.title].size.push(item.size);
      }
    } else {
      tshirts[item.title] = JSON.parse(JSON.stringify(item));
      if (item.availableQty > 0) {
        tshirts[item.title].color = [item.color];
        tshirts[item.title].size = [item.size];
      }
    }
  }
  return {
    props: { products: JSON.parse(JSON.stringify(tshirts)) }, // will be passed to the page component as props
  };
}
